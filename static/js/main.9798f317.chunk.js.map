{"version":3,"sources":["utils/dbquote.js","Randomgen.jsx","App.js","index.js"],"names":["quote","text","author","Wrapper","styled","div","Box","BoxTwo","Author","Button","button","Ancle","a","i","Randomgen","state","tweet","id","icon","faQuoteRight","this","faTwitterSquare","onClick","Math","floor","random","length","setState","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NACaA,EAAQ,CACjB,CACIC,KAAM,kKACNC,OAAQ,eAEZ,CACID,KAAM,oFACNC,OAAQ,mBAEZ,CACID,KAAM,uEACNC,OAAQ,sCAEZ,CACID,KAAM,uDACNC,OAAQ,kBAEZ,CACID,KAAM,uFACNC,OAAQ,UAEZ,CACID,KAAM,gGACNC,OAAQ,wBAEZ,CACID,KAAM,8FACNC,OAAQ,YAEZ,CACID,KAAM,qFACNC,OAAQ,oBAEZ,CACID,KAAM,+FACNC,OAAQ,cAEZ,CACID,KAAM,uEACNC,OAAQ,yB,8BCjCVC,EAAUC,IAAOC,IAAV,8KASPC,EAAMF,IAAOC,IAAV,mSAgBHE,EAASH,IAAOC,IAAV,6JAONG,EAASJ,IAAOC,IAAV,oDAINI,EAASL,IAAOM,OAAV,8RAcNC,EAAQP,IAAOQ,EAAV,8HASPC,EAAI,EAKaC,E,kDAEjB,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTd,KAAMD,EAAMa,GAAGZ,KACfC,OAAQF,EAAMa,GAAGX,OACjBc,MAAO,+IALD,E,0CASd,WAAU,IAAD,OACL,OACI,cAACb,EAAD,CAASc,GAAG,UAAZ,SACA,eAACX,EAAD,CAAKW,GAAG,YAAR,UACI,6BAAYA,GAAG,OAAf,UACI,8BAAG,cAAC,IAAD,CAAiBC,KAAMC,MAA1B,IAA4CC,KAAKL,MAAMd,QACvD,cAACO,EAAD,CAAQS,GAAG,SAAX,SACA,mCAAMG,KAAKL,MAAMb,eAIrB,eAACK,EAAD,CAAQU,GAAG,YAAX,UACI,cAACN,EAAD,CAAOM,GAAG,cAAV,SAAyB,cAAC,IAAD,CAAiBC,KAAMG,QAChD,cAACZ,EAAD,CAAQQ,GAAG,WAAWK,QAAS,WACdT,KACbA,EAAIU,KAAKC,MAAMD,KAAKE,SAASzB,EAAM0B,SACpBb,EAAIU,KAAKC,MAAMD,KAAKE,SAASzB,EAAM0B,QAAU,EAAKC,SAAS,CAAC1B,KAAKD,EAAMa,GAAGZ,KAAMC,OAAQF,EAAMa,GAAGX,SAChH,EAAKyB,SAAS,CAAC1B,KAAKD,EAAMa,GAAGZ,KAAMC,OAAQF,EAAMa,GAAGX,UAJxD,sC,GAxBmB0B,aC9DxBC,EANH,WACV,OACE,cAAC,EAAD,KCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9798f317.chunk.js","sourcesContent":["\r\nexport const quote = [\r\n    {\r\n        text: 'Nosotros debemos pensar que somos una de las hojas de un árbol, y el árbol es toda la humanidad. No podemos vivir los unos sin los otros, sin el árbol',\r\n        author: ' Pau Casals'\r\n    },\r\n    {\r\n        text: 'Esperamos que pueda suceder cualquier cosa, y nunca estamos prevenidos para nada.',\r\n        author: 'Sophie Soynonov'\r\n    },\r\n    {\r\n        text: 'El pasado es como una lámpara colocada a la entrada del porvenir.',\r\n        author: 'Félicité Robert de Lamennais'\r\n    },\r\n    {\r\n        text: 'No cuentes los días, haz que los días cuenten.',\r\n        author: 'Muhamed Alí'\r\n    },\r\n    {\r\n        text: 'Aquel que duda y no investiga, se torna no sólo infeliz, sino también injusto.',\r\n        author: 'Pascal'\r\n    },\r\n    {\r\n        text: 'Lo que doy, me lo doy. Lo que no doy, me lo quito. Nada para mí que no sea para los otros.',\r\n        author: 'Alejandro Jodorowsky'\r\n    },\r\n    {\r\n        text: 'Nuestra mayor gloria no está en no caer nunca, sino en levantarnos cada vez que caemos. ',\r\n        author: 'Confucio'\r\n    },\r\n    {\r\n        text: 'Se necesitan dos años para aprender a hablar, y sesenta para aprender a callar.',\r\n        author: 'Ernest Hemingway'\r\n    },\r\n    {\r\n        text: 'Nunca sabes lo fuerte que eres, hasta que ser fuerte es la única opción que te queda. ',\r\n        author: 'Bob Marley'\r\n    },\r\n    {\r\n        text: 'En la vida hay algo peor que el fracaso: el no haber intentado nada.',\r\n        author: 'Franklin D. Roosvelt'\r\n    },\r\n];","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport {quote} from './utils/dbquote'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faTwitterSquare} from '@fortawesome/free-brands-svg-icons'\r\nimport {faQuoteRight} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 10% auto;\r\n    max-height: 500px;\r\n    max-width: 960px;\r\n`\r\n\r\nconst Box = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 10px;\r\n    max-width: 500px;\r\n    height: 300px;\r\n\r\n    background: #f08a5d;\r\n    border-radius: 3px;\r\n    color: #fff;\r\n    font-size: 20px;\r\n\r\n`\r\n\r\nconst BoxTwo = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    border-radius: 3px;\r\n`\r\nconst Author = styled.div`\r\n    text-align: right;\r\n`\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  color: #02475e;\r\n  font-size: 1em;\r\n  margin: 1em;\r\n  padding: 0.25em 1em;\r\n  border: 2px solid #02475e;\r\n  border-radius: 3px;\r\n  display: block;\r\n  &:hover { \r\n        border: 2px solid #cf0000;\r\n        color: #cf0000;\r\n    }\r\n`\r\nconst Ancle = styled.a`\r\n    font-size: 1.8em;\r\n    color: #02475e;\r\n    \r\n    &:hover { \r\n        color: #cf0000;\r\n    }\r\n`\r\n\r\nvar i = 0;\r\n/*const rand = () => {\r\n    var i = Math.round(Math.random(0, quote.length))\r\n}*/\r\n\r\nexport default class Randomgen extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            text: quote[i].text,\r\n            author: quote[i].author,\r\n            tweet: 'https://twitter.com/intent/tweet?text=Un%20Fabuloso%20Random%20Quote%20Genarator!!&url=https%3A%2F%2Fj-roma.github.io%2Fquote-generator%2Ft'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Wrapper id=\"wrapper\">\r\n            <Box id=\"quote-box\">\r\n                <blockquote id=\"text\">\r\n                    <p><FontAwesomeIcon icon={faQuoteRight} /> {this.state.text}</p>\r\n                    <Author id=\"author\">\r\n                    <p>- {this.state.author}</p>\r\n                    </Author>\r\n                </blockquote>\r\n\r\n                <BoxTwo id=\"new-quote\">\r\n                    <Ancle id=\"tweet-quote\" ><FontAwesomeIcon icon={faTwitterSquare} /></Ancle>\r\n                    <Button id=\"newquote\" onClick={() => {\r\n                        let origin = i\r\n                        i = Math.floor(Math.random()*quote.length)\r\n                        origin === i ? i = Math.floor(Math.random()*quote.length) : this.setState({text:quote[i].text, author: quote[i].author}); \r\n                        this.setState({text:quote[i].text, author: quote[i].author})\r\n                        }}>Random Quote</Button>\r\n                </BoxTwo>\r\n\r\n            </Box>\r\n        </Wrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport Randomgen from './Randomgen'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Randomgen/>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}